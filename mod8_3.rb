#Нехай задано двовимірний масив – квадратну матрицю (розмір 3х3 мінімум). 
#Обчислити суму елементів головної діагоналі, елементів під головною діагоналлю, елементів над головною діагоналлю. 
#Результат повернути у вигляді хешу наступного вигляду {“m” => 10, “u” => 20, “o” => 30}, 
#де m – сума елементів головної діагоналі, u, o – елементів над головною діагоналлю і під головною 
#діагоналлю відповідно

#Приклад введених даних і результат:

#puts(matrix_params([[1,2,3],[4,5,6],[7,8,9]])) # {"m"=>15, "u"=>11, "o"=>19}
#puts(matrix_params([[1,2,2],[3,1,2],[3,3,1]])) # {"m"=>3, "u"=>6, "o"=>9}

#Шаблон для розв’язку:

#def matrix_params(arr)
  # Ваш код
#end

def matrix_params(arr)
    sum1 = arr[0][0] + arr[1][1] + arr[2][2]
    sum2 = arr[0][1] + arr[0][2] + arr[1][2]
    sum3 = arr[1][0] + arr[2][0] + arr[2][1]
    dict = {"m" => sum1, "u" => sum2, "o" => sum3}
 return dict
 end
puts(matrix_params([[1,2,3],[4,5,6],[7,8,9]]))
puts(matrix_params([[1,2,2],[3,1,2],[3,3,1]]))

#Ну так змініть в коді  рядок dict на
#dict = {"m" => sum1, "u" => sum2, "o" => sum3}

#_________________________________
def matrix_params(arr)
  m =  u = o = 0
  (0...arr.size).each do |i|
      m += arr[i][i]
      x = i + 1
      until arr[i][x] == nil
          u += arr[i][x]
          x += 1
      end
      y = i - 1
      until y < 0
          o += arr[i][y]
          y -= 1
      end
  end
  dict = {"m" => m, "u" => u, "o" => o}
end
puts(matrix_params([[1,2,3],[4,5,6],[7,8,9]]))
puts(matrix_params([[1,2,2],[3,1,2],[3,3,1]]))





